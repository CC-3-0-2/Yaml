heat_template_version: 2015-04-30

description: >
  HOT template to creates a virtual network with one subnet each.
  set allow-transit, forwarding_mode and route-targets
parameters:
  private_net_1_name:
    type: string
    description: Name of private network to be created
  private_net_1_prefix:
    type: string
    description: Private network address prefix
  private_net_1_gateway:
    type: string
    description: Private network address prefix
  private_net_1_prefix_len:
    type: string
    description: Private network address prefix len
  private_net_2_prefix:
    type: string
    description: Private network address prefix
  private_net_2_gateway:
    type: string
    description: Private network address prefix
  private_net_2_prefix_len:
    type: string
    description: Private network address prefix len
  virtual_network_properties_rpf:
    type: string
    description: rpf for the VirtualNetwork
  is_shared:
    type: boolean
    description: is_shared for the VirtualNetwork
  allow_transit:
    type: boolean
    description: Private network allow transit
  forwarding_mode:
    type: string
    description: Private network forwarding_mode
  is_enable_dhcp:
    type: boolean
    description: enable_dhcp for the VirtualNetwork
  private_net_1_pools_start:
    type: string
    description: start for the VirtualNetwork
  private_net_1_pools_end:
    type: string
    description: end for the VirtualNetwork
  private_net_2_pools_start:
    type: string
    description: start for the VirtualNetwork
  private_net_2_pools_end:
    type: string
    description: end for the VirtualNetwork
  addr_from_start:
    type: boolean
    description: start for the VirtualNetwork
  multi_policy_service_chains_enabled:
    type: string
    description: multi_policy_service_chains_enabled for the VirtualNetwork

  vn_policy_1:
    type: string
    description: vn policy
  vn_policy_2:
    type: string
    description: vn policy

  network_policy_entries_policy_rule_rule_sequence_major:
    type: number
    description: major for the NetworkPolicy
  network_policy_entries_policy_rule_rule_sequence_minor:
    type: number
    description: minor for the NetworkPolicy


resources:
  template_NetworkIpam_1:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: private_net_1_name }

  template_VirtualNetwork_1:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_1 ]
    properties:
      name: { get_param: private_net_1_name }
      network_policy_refs: [{get_param: vn_policy_1}, {get_param: vn_policy_2}]
      network_policy_refs_data:
       [
        {
         network_policy_refs_data_sequence:
           {
             network_policy_refs_data_sequence_major: 0,
             network_policy_refs_data_sequence_minor: 0,
           }
        },
        {
         network_policy_refs_data_sequence:
           {
             network_policy_refs_data_sequence_major: 1,
             network_policy_refs_data_sequence_minor: 1,
           }
         }
       ] 
      virtual_network_properties:
        {
          virtual_network_properties_allow_transit: { get_param: allow_transit },
          virtual_network_properties_forwarding_mode: { get_param: forwarding_mode },
          virtual_network_properties_rpf: { get_param: virtual_network_properties_rpf },
        }
      is_shared: { get_param: is_shared }
      multi_policy_service_chains_enabled: { get_param: multi_policy_service_chains_enabled }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_1 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: private_net_1_prefix },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: private_net_1_prefix_len },
                },
              network_ipam_refs_data_ipam_subnets_default_gateway: { get_param: private_net_1_gateway },
              network_ipam_refs_data_ipam_subnets_enable_dhcp: { get_param: is_enable_dhcp },
              network_ipam_refs_data_ipam_subnets_allocation_pools:
                [{
                  network_ipam_refs_data_ipam_subnets_allocation_pools_start: { get_param: private_net_1_pools_start },
                  network_ipam_refs_data_ipam_subnets_allocation_pools_end: { get_param: private_net_1_pools_end },
                }],
              network_ipam_refs_data_ipam_subnets_addr_from_start: { get_param: addr_from_start },
            },
            {
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: private_net_2_prefix },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: private_net_2_prefix_len },
                },
              network_ipam_refs_data_ipam_subnets_default_gateway: { get_param: private_net_2_gateway },
              network_ipam_refs_data_ipam_subnets_enable_dhcp: { get_param: is_enable_dhcp },
              network_ipam_refs_data_ipam_subnets_allocation_pools:
                [{
                  network_ipam_refs_data_ipam_subnets_allocation_pools_start: { get_param: private_net_2_pools_start },
                  network_ipam_refs_data_ipam_subnets_allocation_pools_end: { get_param: private_net_2_pools_end },
                }],
                network_ipam_refs_data_ipam_subnets_addr_from_start: { get_param: addr_from_start },
            }],
         }]
