heat_template_version: 2015-04-30

parameters:
  template_VirtualNetwork_1:
    type: string
    description: Name of management network to be created
  template_VirtualNetwork_2:
    type: string
    description: Name of mirror network to be created
  template_VirtualNetwork_3:
    type: string
    description: Name of mirror network to be created

  svm_name_1:
    type: string
    description: Name of the SVM
  svm_name_2:
    type: string
    description: Name of the SVM
  flavor:
    type: string
    description: Flavor of the end VMs
  image:
    type: string
    description: Name of the end VM image
# AAP
  aap_ip_prefix:
    type: string
    description: ip_prefix for the ServiceInstance
  aap_ip_prefix_len:
    type: number
    description: ip_prefix_len for the ServiceInstance
  aap_ha_mode:
    type: string
    description: address_mode for the ServiceInstance


resources:

  template_VirtualMachineInterface_1:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: template_VirtualNetwork_1 },
        }
      virtual_network_refs: [{ get_param: template_VirtualNetwork_1 }]

  template_VirtualMachineInterface_2:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: template_VirtualNetwork_2 },
        }
      virtual_network_refs: [{ get_param: template_VirtualNetwork_2 }]
      virtual_machine_interface_allowed_address_pairs:
        {
          virtual_machine_interface_allowed_address_pairs_allowed_address_pair:
            [{
              virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip:
                {
                  virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip_ip_prefix: { get_param: aap_ip_prefix },
                  virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len: { get_param: aap_ip_prefix_len },
                },
              virtual_machine_interface_allowed_address_pairs_allowed_address_pair_address_mode: { get_param: aap_ha_mode },
            }],
        }
  template_VirtualMachineInterface_3:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: template_VirtualNetwork_3 },
        }
      virtual_network_refs: [{ get_param: template_VirtualNetwork_3 }]
      virtual_machine_interface_allowed_address_pairs:
        {
          virtual_machine_interface_allowed_address_pairs_allowed_address_pair:
            [{
              virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip:
                {
                  virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip_ip_prefix: { get_param: aap_ip_prefix },
                  virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len: { get_param: aap_ip_prefix_len },
                },
              virtual_machine_interface_allowed_address_pairs_allowed_address_pair_address_mode: { get_param: aap_ha_mode },
            }],
        }


  template_VirtualMachineInterface_4:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: template_VirtualNetwork_1 },
        }
      virtual_network_refs: [{ get_param: template_VirtualNetwork_1 }]

  template_VirtualMachineInterface_5:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: template_VirtualNetwork_2 },
        }
      virtual_network_refs: [{ get_param: template_VirtualNetwork_2 }]
      virtual_machine_interface_allowed_address_pairs:
        {
          virtual_machine_interface_allowed_address_pairs_allowed_address_pair:
            [{
              virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip:
                {
                  virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip_ip_prefix: { get_param: aap_ip_prefix },
                  virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len: { get_param: aap_ip_prefix_len },
                },
              virtual_machine_interface_allowed_address_pairs_allowed_address_pair_address_mode: { get_param: aap_ha_mode },
            }],
        }
  template_VirtualMachineInterface_6:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: template_VirtualNetwork_3 },
        }
      virtual_network_refs: [{ get_param: template_VirtualNetwork_3 }]
      virtual_machine_interface_allowed_address_pairs:
        {
          virtual_machine_interface_allowed_address_pairs_allowed_address_pair:
            [{
              virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip:
                {
                  virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip_ip_prefix: { get_param: aap_ip_prefix },
                  virtual_machine_interface_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len: { get_param: aap_ip_prefix_len },
                },
              virtual_machine_interface_allowed_address_pairs_allowed_address_pair_address_mode: { get_param: aap_ha_mode },
            }],
        }

  template_InstanceIp_1:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_1 ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_1 }]
      virtual_network_refs: [{ get_param: template_VirtualNetwork_1 }]

  template_InstanceIp_2:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_2 ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_2 }]
      virtual_network_refs: [{ get_param: template_VirtualNetwork_2 }]

  template_InstanceIp_3:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_3 ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_3 }]
      virtual_network_refs: [{ get_param: template_VirtualNetwork_3 }]

  template_InstanceIp_4:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_4 ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_4 }]
      virtual_network_refs: [{ get_param: template_VirtualNetwork_1 }]

  template_InstanceIp_5:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_5 ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_5 }]
      virtual_network_refs: [{ get_param: template_VirtualNetwork_2 }]

  template_InstanceIp_6:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_6 ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_6 }]
      virtual_network_refs: [{ get_param: template_VirtualNetwork_3 }]

  instance_1:
    type: OS::Nova::Server
    depends_on: [ template_InstanceIp_1, template_InstanceIp_2, template_InstanceIp_3 ]
    properties:
      name: {get_param: svm_name_1 }
      image: { get_param:  image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: template_VirtualMachineInterface_1 }
        - port: { get_resource: template_VirtualMachineInterface_2 }
        - port: { get_resource: template_VirtualMachineInterface_3 }

  instance_2:
    type: OS::Nova::Server
    depends_on: [ template_InstanceIp_4, template_InstanceIp_5, template_InstanceIp_6 ]
    properties:
      name: {get_param: svm_name_2 }
      image: { get_param:  image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: template_VirtualMachineInterface_4 }
        - port: { get_resource: template_VirtualMachineInterface_5 }
        - port: { get_resource: template_VirtualMachineInterface_6 }
